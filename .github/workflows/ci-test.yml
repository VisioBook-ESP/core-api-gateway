name: Build and Push Docker Image

on: [push]

jobs:
  org-runner-test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "âœ… Running on organization-level self-hosted runner!"

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: org-runner-test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        env:
          DOCKER_BUILDKIT: 1  # Enable BuildKit for faster builds
        run: |
          # Generate unique tag (timestamp + short SHA)
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          SHORT_SHA=$(git rev-parse --short=7 HEAD)
          VERSION="${TIMESTAMP}-${SHORT_SHA}"

          # Build with version tag and cache support
          docker buildx build \
            --platform linux/amd64 \
            --tag ghcr.io/visiobook-esp/core-api-gateway:$VERSION \
            --tag ghcr.io/visiobook-esp/core-api-gateway:latest \
            --push \
            ./poc

          # Store version for subsequent steps
          echo "IMAGE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "IMAGE_NAME=ghcr.io/visiobook-esp/core-api-gateway" >> $GITHUB_ENV

      - name: Output image info
        run: |
          echo "Successfully built and pushed:"
          echo "Versioned: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}"
          echo "Latest: ${{ env.IMAGE_NAME }}:latest"
